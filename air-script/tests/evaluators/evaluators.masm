proc.compute_evaluate_transitions
    # constraint 0 for main
    padw mem_loadw.4294965000 drop drop padw mem_loadw.4294965000 movdn.3 movdn.3 drop drop ext2sub
    # Multiply by the composition coefficient
    padw mem_loadw.4294966016 movdn.3 movdn.3 drop drop ext2mul
    # constraint 1 for main
    padw mem_loadw.4294965002 drop drop padw mem_loadw.4294965002 movdn.3 movdn.3 drop drop ext2sub
    # Multiply by the composition coefficient
    padw mem_loadw.4294966016 drop drop ext2mul
    # constraint 2 for main
    padw mem_loadw.4294965006 drop drop padw mem_loadw.4294965006 movdn.3 movdn.3 drop drop ext2sub
    # Multiply by the composition coefficient
    padw mem_loadw.4294966017 movdn.3 movdn.3 drop drop ext2mul
    # constraint 3 for main
    padw mem_loadw.4294965000 movdn.3 movdn.3 drop drop
    # push the accumulator to the stack
    push.1 movdn.2 push.0 movdn.2
    # => [b1, b0, r1, r0, ...]
    # square 1 times
    dup.1 dup.1 ext2mul
    # multiply
    dup.1 dup.1 movdn.5 movdn.5
    # => [b1, b0, r1, r0, b1, b0, ...] (4 cycles)
    ext2mul movdn.3 movdn.3
    # => [b1, b0, r1', r0', ...] (5 cycles)
    # clean stack
    drop drop
    # => [r1, r0, ...] (2 cycles)
    padw mem_loadw.4294965000 movdn.3 movdn.3 drop drop ext2sub
    # Multiply by the composition coefficient
    padw mem_loadw.4294966017 drop drop ext2mul
    # constraint 4 for main
    padw mem_loadw.4294965001 movdn.3 movdn.3 drop drop
    # push the accumulator to the stack
    push.1 movdn.2 push.0 movdn.2
    # => [b1, b0, r1, r0, ...]
    # square 1 times
    dup.1 dup.1 ext2mul
    # multiply
    dup.1 dup.1 movdn.5 movdn.5
    # => [b1, b0, r1, r0, b1, b0, ...] (4 cycles)
    ext2mul movdn.3 movdn.3
    # => [b1, b0, r1', r0', ...] (5 cycles)
    # clean stack
    drop drop
    # => [r1, r0, ...] (2 cycles)
    padw mem_loadw.4294965001 movdn.3 movdn.3 drop drop ext2sub
    # Multiply by the composition coefficient
    padw mem_loadw.4294966018 movdn.3 movdn.3 drop drop ext2mul
    # constraint 5 for main
    padw mem_loadw.4294965002 movdn.3 movdn.3 drop drop
    # push the accumulator to the stack
    push.1 movdn.2 push.0 movdn.2
    # => [b1, b0, r1, r0, ...]
    # square 1 times
    dup.1 dup.1 ext2mul
    # multiply
    dup.1 dup.1 movdn.5 movdn.5
    # => [b1, b0, r1, r0, b1, b0, ...] (4 cycles)
    ext2mul movdn.3 movdn.3
    # => [b1, b0, r1', r0', ...] (5 cycles)
    # clean stack
    drop drop
    # => [r1, r0, ...] (2 cycles)
    padw mem_loadw.4294965002 movdn.3 movdn.3 drop drop ext2sub
    # Multiply by the composition coefficient
    padw mem_loadw.4294966018 drop drop ext2mul
    # constraint 6 for main
    padw mem_loadw.4294965003 movdn.3 movdn.3 drop drop
    # push the accumulator to the stack
    push.1 movdn.2 push.0 movdn.2
    # => [b1, b0, r1, r0, ...]
    # square 1 times
    dup.1 dup.1 ext2mul
    # multiply
    dup.1 dup.1 movdn.5 movdn.5
    # => [b1, b0, r1, r0, b1, b0, ...] (4 cycles)
    ext2mul movdn.3 movdn.3
    # => [b1, b0, r1', r0', ...] (5 cycles)
    # clean stack
    drop drop
    # => [r1, r0, ...] (2 cycles)
    padw mem_loadw.4294965003 movdn.3 movdn.3 drop drop ext2sub
    # Multiply by the composition coefficient
    padw mem_loadw.4294966019 movdn.3 movdn.3 drop drop ext2mul
end # END PROC compute_evaluate_transitions

proc.evaluate_transitions
    exec.compute_evaluate_transitions
    # Accumulate the numerator of the constraint polynomial
    ext2add ext2add ext2add ext2add ext2add ext2add ext2add
end # END PROC evaluate_transitions

proc.evaluate_boundary
end # END PROC evaluate_boundary

